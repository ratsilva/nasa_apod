// Mocks generated by Mockito 5.4.4 from annotations
// in nasa_picture_data/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:nasa_picture_data/src/datasource/local_data_source.dart' as _i8;
import 'package:nasa_picture_data/src/datasource/remote_data_source.dart'
    as _i9;
import 'package:nasa_picture_data/src/dto/nasa_picture_dto.dart' as _i3;
import 'package:network_service/network_service.dart' as _i6;
import 'package:network_service/src/target/target.dart' as _i7;
import 'package:storage_service/storage_service.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T> extends _i1.SmartFake implements _i2.Future<T> {
  _FakeFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNasaPictureDto_1 extends _i1.SmartFake
    implements _i3.NasaPictureDto {
  _FakeNasaPictureDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i4.StorageService {
  @override
  _i2.Future<Model> get<Model>(
    String? key,
    Model Function(Map<String, dynamic>)? deserializer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            key,
            deserializer,
          ],
        ),
        returnValue: _i5.ifNotNull(
              _i5.dummyValueOrNull<Model>(
                this,
                Invocation.method(
                  #get,
                  [
                    key,
                    deserializer,
                  ],
                ),
              ),
              (Model v) => _i2.Future<Model>.value(v),
            ) ??
            _FakeFuture_0<Model>(
              this,
              Invocation.method(
                #get,
                [
                  key,
                  deserializer,
                ],
              ),
            ),
        returnValueForMissingStub: _i5.ifNotNull(
              _i5.dummyValueOrNull<Model>(
                this,
                Invocation.method(
                  #get,
                  [
                    key,
                    deserializer,
                  ],
                ),
              ),
              (Model v) => _i2.Future<Model>.value(v),
            ) ??
            _FakeFuture_0<Model>(
              this,
              Invocation.method(
                #get,
                [
                  key,
                  deserializer,
                ],
              ),
            ),
      ) as _i2.Future<Model>);

  @override
  _i2.Future<List<Model>> filter<Model>(
    String? keyPrefix,
    Model Function(Map<String, dynamic>)? deserializer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #filter,
          [
            keyPrefix,
            deserializer,
          ],
        ),
        returnValue: _i2.Future<List<Model>>.value(<Model>[]),
        returnValueForMissingStub: _i2.Future<List<Model>>.value(<Model>[]),
      ) as _i2.Future<List<Model>>);

  @override
  _i2.Future<Model> put<Model>(
    Map<String, dynamic>? json,
    String? key,
    Model Function(Map<String, dynamic>)? deserializer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            json,
            key,
            deserializer,
          ],
        ),
        returnValue: _i5.ifNotNull(
              _i5.dummyValueOrNull<Model>(
                this,
                Invocation.method(
                  #put,
                  [
                    json,
                    key,
                    deserializer,
                  ],
                ),
              ),
              (Model v) => _i2.Future<Model>.value(v),
            ) ??
            _FakeFuture_0<Model>(
              this,
              Invocation.method(
                #put,
                [
                  json,
                  key,
                  deserializer,
                ],
              ),
            ),
        returnValueForMissingStub: _i5.ifNotNull(
              _i5.dummyValueOrNull<Model>(
                this,
                Invocation.method(
                  #put,
                  [
                    json,
                    key,
                    deserializer,
                  ],
                ),
              ),
              (Model v) => _i2.Future<Model>.value(v),
            ) ??
            _FakeFuture_0<Model>(
              this,
              Invocation.method(
                #put,
                [
                  json,
                  key,
                  deserializer,
                ],
              ),
            ),
      ) as _i2.Future<Model>);
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i6.NetworkService {
  @override
  _i2.Future<List<Model>> requestList<Model>(
    _i7.Target? target,
    Model Function(Map<String, dynamic>)? deserializer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestList,
          [
            target,
            deserializer,
          ],
        ),
        returnValue: _i2.Future<List<Model>>.value(<Model>[]),
        returnValueForMissingStub: _i2.Future<List<Model>>.value(<Model>[]),
      ) as _i2.Future<List<Model>>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i8.LocalDataSource {
  @override
  _i2.Future<_i3.NasaPictureDto> getByDate(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getByDate,
          [date],
        ),
        returnValue: _i2.Future<_i3.NasaPictureDto>.value(_FakeNasaPictureDto_1(
          this,
          Invocation.method(
            #getByDate,
            [date],
          ),
        )),
        returnValueForMissingStub:
            _i2.Future<_i3.NasaPictureDto>.value(_FakeNasaPictureDto_1(
          this,
          Invocation.method(
            #getByDate,
            [date],
          ),
        )),
      ) as _i2.Future<_i3.NasaPictureDto>);

  @override
  _i2.Future<List<_i3.NasaPictureDto>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i2.Future<List<_i3.NasaPictureDto>>.value(<_i3.NasaPictureDto>[]),
        returnValueForMissingStub:
            _i2.Future<List<_i3.NasaPictureDto>>.value(<_i3.NasaPictureDto>[]),
      ) as _i2.Future<List<_i3.NasaPictureDto>>);

  @override
  _i2.Future<List<_i3.NasaPictureDto>> upsertAll(
          List<_i3.NasaPictureDto>? pictures) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsertAll,
          [pictures],
        ),
        returnValue:
            _i2.Future<List<_i3.NasaPictureDto>>.value(<_i3.NasaPictureDto>[]),
        returnValueForMissingStub:
            _i2.Future<List<_i3.NasaPictureDto>>.value(<_i3.NasaPictureDto>[]),
      ) as _i2.Future<List<_i3.NasaPictureDto>>);

  @override
  String buildKey(DateTime? date) => (super.noSuchMethod(
        Invocation.method(
          #buildKey,
          [date],
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #buildKey,
            [date],
          ),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #buildKey,
            [date],
          ),
        ),
      ) as String);
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i9.RemoteDataSource {
  @override
  _i2.Future<List<_i3.NasaPictureDto>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i2.Future<List<_i3.NasaPictureDto>>.value(<_i3.NasaPictureDto>[]),
        returnValueForMissingStub:
            _i2.Future<List<_i3.NasaPictureDto>>.value(<_i3.NasaPictureDto>[]),
      ) as _i2.Future<List<_i3.NasaPictureDto>>);
}
